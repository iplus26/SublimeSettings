{

  // Personal .jshintrc file 
  // Author: Ivan Jiang (iplus26)


  // The plugin looks for a .jshintrc file in the same directory as the source
  // file you're prettifying (or any directory above if it doesn't exist, or in
  // your home folder if everything else fails) and uses those options along
  // the default ones.

  // Details: https://github.com/victorporof/Sublime-JSHint#using-your-own-jshintrc-options
  // Example: https://github.com/jshint/jshint/blob/master/examples/.jshintrc
  // Documentation: http://www.jshint.com/docs/options/
  "globals"  : {
    "EventEmitter"  : true,
    "Promise"       : true,
    "window"        : false,
    "$"             : false,
    "angular"       : false,
    "define"        : false,

    // Tencent Caiyun
    "TweenLite"     : false,
    "app"           : true,
    "Config"        : true,
    "Environment"   : true,
    "tvAuth"        : false
  },

  "browser"  : true,
  "esnext"   : true,

  "undef"    : true,

  "expr"     : true,

  // This option warns when you define and never use your variables. 
  // It is very useful for general code cleanup, especially when 
  // used in addition to undef.
  "unused"   : true,

  // This option requires the code to run in ECMAScript 5's strict mode. 
  // Strict mode is a way to opt in to a restricted variant of JavaScript. 
  // Strict mode eliminates some JavaScript pitfalls that didn't cause 
  // errors by changing them to produce errors. It also fixes mistakes 
  // that made it difficult for the JavaScript engines to perform certain 
  // optimizations.
  "strict"   : "implied",
  
  "moz"      : true,
  "boss"     : true,
  "node"     : true,
  "validthis": true,

  // Ignore Warning: A leading decimal point can be confused with a dot: '{a}'
  "-W008"    : true,

  // 启用超酷的 ES6
  "esversion": 6,

  // JSHint 默认会警告 foo['bar'] 这种写法, 我不想看到这个警告
  // Ignore Warning: {variable} is better written in dot notation.
  "sub"      : true
}
